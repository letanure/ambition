'use strict';

module.exports = function(grunt) {
    grunt.registerMultiTask('traceur', 'Compile ES6 to ES5 with Traceur.', function() {
        var me = this,
            done = me.async(),
            exec = require('child_process').exec,
            fs = require('fs'),
            path = require('path'),
            options = me.options(),
            cmd = path.resolve('node_modules/grunt-traceur-compiler/node_modules/traceur/traceur'),
            cmdOpts = '',
            rc = 0,
            numExec = 0;

        //check the long path for existence
        if (!fs.existsSync(cmd)) {
            cmd = path.resolve('node_modules/traceur/traceur');
        }

        //build the command line arguments
        Object.getOwnPropertyNames(options).forEach(function(prop) {
            if (prop !== 'out' && options[prop] !== false) {
                cmdOpts += ' --' + prop.toLowerCase();
            }
        });

        //run traceur on each file
        me.files.forEach(function(file) {
            var srcs = grunt.file.expand(file.orig.src).join(' '),
                dest = file.orig.dest,
                traceurCmd = cmd + cmdOpts + ' --out ' + dest + ' ' + srcs;

            exec(traceurCmd, function(error) {
                if (error) {
                    grunt.log.error(srcs);
                    rc = error;
                } else {
                    grunt.log.ok('Created ' + dest);
                }

                numExec += 1;
                if (numExec === me.files.length) {
                    done(rc);
                }
            });

        });
    });
};
